cluster {
  node {
    id: member2
    address: "localhost:9992"
  }
}

cluster.discovery {
  type: bootstrap
  nodes.1 {
    id: member1
    address: "localhost:9991"
  }
  nodes.2 {
    id: member2
    address: "localhost:9992"
  }
  nodes.3 {
    id: member3
    address: "localhost:9993"
  }
}

# The management group is used by the system to store primitive, session, and transaction information.
# This must be a Raft partition group for strongly consistent clusters.
managementGroup {
  type: raft
  partitions: 1
  storage.level: mapped
  storage.directory: data/member2
  members: [member1, member2, member3]
}

# An additional Raft partition group should be added for storing Raft-based primitives.
# The number of partitions in the group is the number of distinct Raft clusters and should
# typically be equal to 1 or 2 times the number of members in the group. The 'partitionSize'
# if the size of each Raft partition. The members in the group must be explicitly listed in the
# 'members' field for safety.
#partitionGroups.consensus {
#  type: raft
#  storage.level: mapped
#  storage.directory: data/member2
#  members: [member1, member2, member3]
#}
